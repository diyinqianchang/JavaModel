

策略模式的继承就是面向对象的继承和多态机制

Context封装角色。 上下角色，其承上启下封装作用，屏蔽高层模块对策略、算法的直接访问
封装可能存在的变化

Strategy抽象策略角色
定义每个策略或算法必须具有的方法和属性。

ConcreteStrategy具体策略角色   实现抽象策略的操作，该类含有具体算法

优点：
算法可以自由切换
避免使用多重条件判断 --->多重条件语句不易维护
扩展性良好


使用场景
多个类只有在算法或行为上稍有不同的场景
算法需要自由切换的场景
	例如，算法的选择是由使用者决定的，或者算法始终在进化，特别是一些站在技术前沿的行业
需要屏蔽算法规则的场景


